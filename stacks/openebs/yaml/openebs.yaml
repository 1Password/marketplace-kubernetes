---
# Source: openebs/templates/cm-node-disk-manager.yaml

# This is the node-disk-manager related config.
# It can be used to customize the disks probes and filters
apiVersion: v1
kind: ConfigMap
metadata:
  name: openebs-ndm-config
  namespace: openebs
  labels:
    app: openebs
    chart: openebs-1.3.0
    release: openebs
    heritage: Tiller
    component: ndm-config
    openebs.io/component-name: ndm-config
data:
  # udev-probe is default or primary probe which should be enabled to run ndm
  # filterconfigs contains configs of filters - in the form of include
  # and exclude comma separated strings
  node-disk-manager.config: |
    probeconfigs:
      - key: udev-probe
        name: udev probe
        state: true
      - key: seachest-probe
        name: seachest probe
        state: false
      - key: smart-probe
        name: smart probe
        state: true
    filterconfigs:
      - key: os-disk-exclude-filter
        name: os disk exclude filter
        state: true
        exclude: "/,/etc/hosts,/boot"
      - key: vendor-filter
        name: vendor filter
        state: true
        include: ""
        exclude: "CLOUDBYT,OpenEBS"
      - key: path-filter
        name: path filter
        state: true
        include: ""
        exclude: "loop,fd0,sr0,/dev/ram,/dev/dm-,/dev/md"
---

---
# Source: openebs/templates/serviceaccount.yaml

apiVersion: v1
kind: ServiceAccount
metadata:
  name: openebs-maya-operator
  namespace: openebs
  labels:
    app: openebs
    chart: openebs-1.3.0
    release: openebs
    heritage: Tiller

---
# Source: openebs/templates/clusterrole.yaml

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: openebs-maya-operator
  labels:
    app: openebs
    chart: openebs-1.3.0
    release: openebs
    heritage: Tiller
rules:
- apiGroups: ["*"]
  resources: ["nodes", "nodes/proxy"]
  verbs: ["*"]
- apiGroups: ["*"]
  resources: ["namespaces", "services", "pods", "pods/exec", "deployments", "replicationcontrollers", "replicasets", "events", "endpoints", "configmaps", "secrets",  "jobs", "cronjobs" ]
  verbs: ["*"]
- apiGroups: ["*"]
  resources: ["statefulsets", "daemonsets"]
  verbs: ["*"]
- apiGroups: ["*"]
  resources: ["resourcequotas", "limitranges"]
  verbs: ["list", "watch"]
- apiGroups: ["*"]
  resources: ["ingresses", "horizontalpodautoscalers", "verticalpodautoscalers", "poddisruptionbudgets", "certificatesigningrequests"]
  verbs: ["list", "watch"]
- apiGroups: ["*"]
  resources: ["storageclasses", "persistentvolumeclaims", "persistentvolumes"]
  verbs: ["*"]
- apiGroups: ["volumesnapshot.external-storage.k8s.io"]
  resources: ["volumesnapshots", "volumesnapshotdatas"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: [ "get", "list", "create", "update", "delete", "patch"]
- apiGroups: ["*"]
  resources: [ "disks", "blockdevices", "blockdeviceclaims"]
  verbs: ["*" ]
- apiGroups: ["*"]
  resources: [ "cstorpoolclusters", "storagepoolclaims", "storagepoolclaims/finalizers", "cstorpoolclusters/finalizers", "storagepools"]
  verbs: ["*" ]
- apiGroups: ["*"]
  resources: [ "castemplates", "runtasks"]
  verbs: ["*" ]
- apiGroups: ["*"]
  resources: [ "cstorpools", "cstorpools/finalizers", "cstorvolumereplicas", "cstorvolumes", "cstorvolumeclaims"]
  verbs: ["*" ]
- apiGroups: ["*"]
  resources: [ "cstorpoolinstances", "cstorpoolinstances/finalizers"]
  verbs: ["*" ]
- apiGroups: ["*"]
  resources: [ "cstorbackups", "cstorrestores", "cstorcompletedbackups"]
  verbs: ["*" ]
- apiGroups: ["*"]
  resources: [ "upgradetasks"]
  verbs: ["*" ]
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get", "watch", "list", "delete", "update", "create"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]

---
# Source: openebs/templates/clusterrolebinding.yaml

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: openebs-maya-operator
  labels:
    app: openebs
    chart: openebs-1.3.0
    release: openebs
    heritage: Tiller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: openebs-maya-operator
subjects:
- kind: ServiceAccount
  name: openebs-maya-operator
  namespace: openebs

---
# Source: openebs/templates/service-admission-server.yaml

apiVersion: v1
kind: Service
metadata:
  name: admission-server-svc
  namespace: openebs
  labels:
    app: admission-webhook
    chart: openebs-1.3.0
    release: openebs
    heritage: Tiller
    openebs.io/component-name: admission-webhook-svc
spec:
  ports:
  - port: 443
    targetPort: 443
  selector:
    app: admission-webhook

---
# Source: openebs/templates/service-maya-apiserver.yaml

apiVersion: v1
kind: Service
metadata:
  name: openebs-apiservice
  namespace: openebs
  labels:
    app: openebs
    chart: openebs-1.3.0
    release: openebs
    heritage: Tiller
    openebs.io/component-name: maya-apiserver-svc
spec:
  ports:
  - name: api
    port: 5656
    targetPort: 5656
    protocol: TCP
  selector:
    app: openebs
    release: openebs
    component: apiserver
  sessionAffinity: None

---
# Source: openebs/templates/daemonset-ndm.yaml

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: openebs-ndm
  namespace: openebs
  labels:
    app: openebs
    chart: openebs-1.3.0
    release: openebs
    heritage: Tiller
    component: ndm
    openebs.io/component-name: ndm
    openebs.io/version: 1.3.0
spec:
  updateStrategy:
    type: "RollingUpdate"
  selector:
    matchLabels:
      app: openebs
      release: openebs
      component: ndm
  template:
    metadata:
      labels:
        app: openebs
        release: openebs
        component: ndm
        openebs.io/component-name: ndm
        name: openebs-ndm
        openebs.io/version: 1.3.0
    spec:
      serviceAccountName: openebs-maya-operator
      hostNetwork: true
      containers:
      - name: openebs-ndm
        image: "quay.io/openebs/node-disk-manager-amd64:v0.4.3"
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
        env:
        # namespace in which NDM is installed will be passed to NDM Daemonset
        # as environment variable
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        # pass hostname as env variable using downward API to the NDM container
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        # specify the directory where the sparse files need to be created.
        # if not specified, then sparse files will not be created.
        - name: SPARSE_FILE_DIR
          value: "/var/openebs/sparse"
        # Size(bytes) of the sparse file to be created.
        - name: SPARSE_FILE_SIZE
          value: "10737418240"
        # Specify the number of sparse files to be created
        - name: SPARSE_FILE_COUNT
          value: "1"
        livenessProbe:
          exec:
            command:
            - pgrep
            - ".*ndm"
          initialDelaySeconds: 30
          periodSeconds: 60
        volumeMounts:
        - name: config
          mountPath: /host/node-disk-manager.config
          subPath: node-disk-manager.config
          readOnly: true
        - name: udev
          mountPath: /run/udev
        - name: procmount
          mountPath: /host/proc
          readOnly: true
        - name: sparsepath
          mountPath: /var/openebs/sparse
      volumes:
      - name: config
        configMap:
          name: openebs-ndm-config
      - name: udev
        hostPath:
          path: /run/udev
          type: Directory
      # mount /proc (to access mount file of process 1 of host) inside container
      # to read mount-point of disks and partitions
      - name: procmount
        hostPath:
          path: /proc
          type: Directory
      - name: sparsepath
        hostPath:
          path: /var/openebs/sparse
      # By default the node-disk-manager will be run on all kubernetes nodes
      # If you would like to limit this to only some nodes, say the nodes
      # that have storage attached, you could label those node and use
      # nodeSelector.
      #
      # e.g. label the storage nodes with - "openebs.io/nodegroup"="storage-node"
      # kubectl label node <node-name> "openebs.io/nodegroup"="storage-node"
      #nodeSelector:
      #  "openebs.io/nodegroup": "storage-node"

---
# Source: openebs/templates/deployment-admission-server.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: openebs-admission-server
  namespace: openebs
  labels:
    app: admission-webhook
    chart: openebs-1.3.0
    release: openebs
    heritage: Tiller
    component: admission-webhook
    openebs.io/component-name: admission-webhook
    openebs.io/version: 1.3.0
spec:
  replicas: 1
  strategy:
    type: "Recreate"
    rollingUpdate: null
  selector:
    matchLabels:
      app: admission-webhook
  template:
    metadata:
      labels:
        app: admission-webhook
        name: admission-webhook
        release: openebs
        openebs.io/version: 1.3.0
        openebs.io/component-name: admission-webhook
    spec:
      serviceAccountName: openebs-maya-operator
      containers:
        - name: admission-webhook
          image: "quay.io/openebs/admission-server:1.3.0"
          imagePullPolicy: IfNotPresent
          args:
            - -tlsCertFile=/etc/webhook/certs/cert.pem
            - -tlsKeyFile=/etc/webhook/certs/key.pem
            - -alsologtostderr
            - -v=8
            - 2>&1
          volumeMounts:
            - name: webhook-certs
              mountPath: /etc/webhook/certs
              readOnly: true
      volumes:
        - name: webhook-certs
          secret:
            secretName: admission-server-certs

---
# Source: openebs/templates/deployment-local-provisioner.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: openebs-localpv-provisioner
  namespace: openebs
  labels:
    app: openebs
    chart: openebs-1.3.0
    release: openebs
    heritage: Tiller
    component: localpv-provisioner
    openebs.io/component-name: openebs-localpv-provisioner
    openebs.io/version: 1.3.0
spec:
  replicas: 1
  strategy:
    type: "Recreate"
    rollingUpdate: null
  selector:
    matchLabels:
      app: openebs
      release: openebs
  template:
    metadata:
      labels:
        app: openebs
        release: openebs
        component: localpv-provisioner
        name: openebs-localpv-provisioner
        openebs.io/component-name: openebs-localpv-provisioner
        openebs.io/version: 1.3.0
    spec:
      serviceAccountName: openebs-maya-operator
      containers:
      - name: openebs-localpv-provisioner
        image: "quay.io/openebs/provisioner-localpv:1.3.0"
        imagePullPolicy: IfNotPresent
        env:
        # OPENEBS_IO_K8S_MASTER enables openebs provisioner to connect to K8s
        # based on this address. This is ignored if empty.
        # This is supported for openebs provisioner version 0.5.2 onwards
        #- name: OPENEBS_IO_K8S_MASTER
        #  value: "http://10.128.0.12:8080"
        # OPENEBS_IO_KUBE_CONFIG enables openebs provisioner to connect to K8s
        # based on this config. This is ignored if empty.
        # This is supported for openebs provisioner version 0.5.2 onwards
        #- name: OPENEBS_IO_KUBE_CONFIG
        #  value: "/home/ubuntu/.kube/config"
        # OPENEBS_NAMESPACE is the namespace that this provisioner will
        # lookup to find maya api service
        - name: OPENEBS_NAMESPACE
          value: "openebs"
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        # OPENEBS_IO_BASE_PATH is the environment variable that provides the
        # default base path on the node where host-path PVs will be provisioned.
        - name: OPENEBS_IO_ENABLE_ANALYTICS
          value: "true"
        - name: OPENEBS_IO_BASE_PATH
          value: "/var/openebs/local"
        - name: OPENEBS_IO_HELPER_IMAGE
          value: "quay.io/openebs/openebs-tools:3.8"
        - name: OPENEBS_IO_INSTALLER_TYPE
          value: "openebs-do-marketplace"
        livenessProbe:
          exec:
            command:
            - pgrep
            - ".*localpv"
          initialDelaySeconds: 30
          periodSeconds: 60

---
# Source: openebs/templates/deployment-maya-apiserver.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: openebs-apiserver
  namespace: openebs
  labels:
    app: openebs
    chart: openebs-1.3.0
    release: openebs
    heritage: Tiller
    component: apiserver
    name: maya-apiserver
    openebs.io/component-name: maya-apiserver
    openebs.io/version: 1.3.0
spec:
  replicas: 1
  strategy:
    type: "Recreate"
    rollingUpdate: null
  selector:
    matchLabels:
      app: openebs
      release: openebs
  template:
    metadata:
      labels:
        app: openebs
        release: openebs
        component: apiserver
        name: maya-apiserver
        openebs.io/component-name: maya-apiserver
        openebs.io/version: 1.3.0
    spec:
      serviceAccountName: openebs-maya-operator
      containers:
      - name: openebs-apiserver
        image: "quay.io/openebs/m-apiserver:1.3.0"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5656
        env:
        # OPENEBS_IO_KUBE_CONFIG enables maya api service to connect to K8s
        # based on this config. This is ignored if empty.
        # This is supported for maya api server version 0.5.2 onwards
        #- name: OPENEBS_IO_KUBE_CONFIG
        #  value: "/home/ubuntu/.kube/config"
        # OPENEBS_IO_K8S_MASTER enables maya api service to connect to K8s
        # based on this address. This is ignored if empty.
        # This is supported for maya api server version 0.5.2 onwards
        #- name: OPENEBS_IO_K8S_MASTER
        #  value: "http://172.28.128.3:8080"
        # OPENEBS_NAMESPACE provides the namespace of this deployment as an
        # environment variable
        - name: OPENEBS_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        # OPENEBS_SERVICE_ACCOUNT provides the service account of this pod as
        # environment variable
        - name: OPENEBS_SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        # OPENEBS_MAYA_POD_NAME provides the name of this pod as
        # environment variable
        - name: OPENEBS_MAYA_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        # If OPENEBS_IO_CREATE_DEFAULT_STORAGE_CONFIG is false then OpenEBS default
        # storageclass and storagepool will not be created.
        - name: OPENEBS_IO_CREATE_DEFAULT_STORAGE_CONFIG
          value: "true"
        # OPENEBS_IO_INSTALL_DEFAULT_CSTOR_SPARSE_POOL decides whether default cstor sparse pool should be
        # configured as a part of openebs installation.
        # If "true" a default cstor sparse pool will be configured, if "false" it will not be configured.
        # This value takes effect only if OPENEBS_IO_CREATE_DEFAULT_STORAGE_CONFIG
        # is set to true
        - name: OPENEBS_IO_INSTALL_DEFAULT_CSTOR_SPARSE_POOL
          value: "false"
        # OPENEBS_IO_CSTOR_TARGET_DIR can be used to specify the hostpath
        # to be used for saving the shared content between the side cars
        # of cstor volume pod.
        # The default path used is /var/openebs/sparse
        - name: OPENEBS_IO_CSTOR_TARGET_DIR
          value: "/var/openebs/sparse"
        # OPENEBS_IO_CSTOR_POOL_SPARSE_DIR can be used to specify the hostpath
        # to be used for saving the shared content between the side cars
        # of cstor pool pod. This ENV is also used to indicate the location
        # of the sparse devices.
        # The default path used is /var/openebs/sparse
        - name: OPENEBS_IO_CSTOR_POOL_SPARSE_DIR
          value: "/var/openebs/sparse"
        # OPENEBS_IO_JIVA_POOL_DIR can be used to specify the hostpath
        # to be used for default Jiva StoragePool loaded by OpenEBS
        # The default path used is /var/openebs
        # This value takes effect only if OPENEBS_IO_CREATE_DEFAULT_STORAGE_CONFIG
        # is set to true
        - name: OPENEBS_IO_JIVA_POOL_DIR
          value: "/var/openebs"
        # OPENEBS_IO_LOCALPV_HOSTPATH_DIR can be used to specify the hostpath
        # to be used for default openebs-hostpath storageclass loaded by OpenEBS
        # The default path used is /var/openebs/local
        # This value takes effect only if OPENEBS_IO_CREATE_DEFAULT_STORAGE_CONFIG
        # is set to true
        - name: OPENEBS_IO_LOCALPV_HOSTPATH_DIR
          value: "/var/openebs/local"
        - name: OPENEBS_IO_JIVA_CONTROLLER_IMAGE
          value: "quay.io/openebs/jiva:1.3.0"
        - name: OPENEBS_IO_JIVA_REPLICA_IMAGE
          value: "quay.io/openebs/jiva:1.3.0"
        - name: OPENEBS_IO_JIVA_REPLICA_COUNT
          value: "3"
        - name: OPENEBS_IO_CSTOR_TARGET_IMAGE
          value: "quay.io/openebs/cstor-istgt:1.3.0"
        - name: OPENEBS_IO_CSTOR_POOL_IMAGE
          value: "quay.io/openebs/cstor-pool:1.3.0"
        - name: OPENEBS_IO_CSTOR_POOL_MGMT_IMAGE
          value: "quay.io/openebs/cstor-pool-mgmt:1.3.0"
        - name: OPENEBS_IO_CSTOR_VOLUME_MGMT_IMAGE
          value: "quay.io/openebs/cstor-volume-mgmt:1.3.0"
        - name: OPENEBS_IO_VOLUME_MONITOR_IMAGE
          value: "quay.io/openebs/m-exporter:1.3.0"
        - name: OPENEBS_IO_CSTOR_POOL_EXPORTER_IMAGE
          value: "quay.io/openebs/m-exporter:1.3.0"
        # OPENEBS_IO_ENABLE_ANALYTICS if set to true sends anonymous usage
        # events to Google Analytics
        - name: OPENEBS_IO_ENABLE_ANALYTICS
          value: "true"
        # OPENEBS_IO_ANALYTICS_PING_INTERVAL can be used to specify the duration (in hours)
        # for periodic ping events sent to Google Analytics. Default is 24 hours.
        - name: OPENEBS_IO_ANALYTICS_PING_INTERVAL
          value: "24h"
        - name: OPENEBS_IO_INSTALLER_TYPE
          value: "openebs-do-marketplace"
        livenessProbe:
          exec:
            command:
            - /usr/local/bin/mayactl
            - version
          initialDelaySeconds: 30
          periodSeconds: 60

---
# Source: openebs/templates/deployment-maya-provisioner.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: openebs-provisioner
  namespace: openebs
  labels:
    app: openebs
    chart: openebs-1.3.0
    release: openebs
    heritage: Tiller
    component: provisioner
    name: openebs-provisioner
    openebs.io/component-name: openebs-provisioner
    openebs.io/version: 1.3.0
spec:
  replicas: 1
  strategy:
    type: "Recreate"
    rollingUpdate: null
  selector:
    matchLabels:
      app: openebs
      release: openebs
  template:
    metadata:
      labels:
        app: openebs
        release: openebs
        component: provisioner
        name: openebs-provisioner
        openebs.io/component-name: openebs-provisioner
        openebs.io/version: 1.3.0
    spec:
      serviceAccountName: openebs-maya-operator
      containers:
      - name: openebs-provisioner
        image: "quay.io/openebs/openebs-k8s-provisioner:1.3.0"
        imagePullPolicy: IfNotPresent
        env:
        # OPENEBS_IO_K8S_MASTER enables openebs provisioner to connect to K8s
        # based on this address. This is ignored if empty.
        # This is supported for openebs provisioner version 0.5.2 onwards
        #- name: OPENEBS_IO_K8S_MASTER
        #  value: "http://10.128.0.12:8080"
        # OPENEBS_IO_KUBE_CONFIG enables openebs provisioner to connect to K8s
        # based on this config. This is ignored if empty.
        # This is supported for openebs provisioner version 0.5.2 onwards
        #- name: OPENEBS_IO_KUBE_CONFIG
        #  value: "/home/ubuntu/.kube/config"
        # OPENEBS_NAMESPACE is the namespace that this provisioner will
        # lookup to find maya api service
        - name: OPENEBS_NAMESPACE
          value: "openebs"
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        # OPENEBS_MAYA_SERVICE_NAME provides the maya-apiserver K8s service name,
        # that provisioner should forward the volume create/delete requests.
        # If not present, "maya-apiserver-service" will be used for lookup.
        # This is supported for openebs provisioner version 0.5.3-RC1 onwards
        - name: OPENEBS_MAYA_SERVICE_NAME
          value: "openebs-apiservice"
        # The following values will be set as annotations to the PV object.
        # Refer : https://github.com/openebs/external-storage/pull/15
        #- name: OPENEBS_MONITOR_URL
        #  value: ""
        #- name: OPENEBS_MONITOR_VOLKEY
        #  value: ""
        #- name: MAYA_PORTAL_URL
        #  value: ""
        livenessProbe:
          exec:
            command:
            - pgrep
            - ".*openebs"
          initialDelaySeconds: 30
          periodSeconds: 60

---
# Source: openebs/templates/deployment-maya-snapshot-operator.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: openebs-snapshot-operator
  namespace: openebs
  labels:
    app: openebs
    chart: openebs-1.3.0
    release: openebs
    heritage: Tiller
    component: snapshot-operator
    openebs.io/component-name: openebs-snapshot-operator
    openebs.io/version: 1.3.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app: openebs
      release: openebs
  strategy:
    type: "Recreate"
    rollingUpdate: null
  template:
    metadata:
      labels:
        app: openebs
        release: openebs
        component: snapshot-operator
        name: openebs-snapshot-operator
        openebs.io/version: 1.3.0
        openebs.io/component-name: openebs-snapshot-operator
    spec:
      serviceAccountName: openebs-maya-operator
      containers:
      - name: openebs-snapshot-controller
        image: "quay.io/openebs/snapshot-controller:1.3.0"
        imagePullPolicy: IfNotPresent
        env:
        # OPENEBS_IO_K8S_MASTER enables openebs snapshot controller to connect to K8s
        # based on this address. This is ignored if empty.
        # This is supported for openebs snapshot controller version 0.6-RC1 onwards
        #- name: OPENEBS_IO_K8S_MASTER
        #  value: "http://10.128.0.12:8080"
        # OPENEBS_IO_KUBE_CONFIG enables openebs snapshot controller to connect to K8s
        # based on this config. This is ignored if empty.
        # This is supported for openebs snapshot controller version 0.6-RC1 onwards
        #- name: OPENEBS_IO_KUBE_CONFIG
        #  value: "/home/ubuntu/.kube/config"
        # OPENEBS_NAMESPACE is the namespace that this snapshot controller will
        # lookup to find maya api service
        - name: OPENEBS_NAMESPACE
          value: "openebs"
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        # OPENEBS_MAYA_SERVICE_NAME provides the maya-apiserver K8s service name,
        # that snapshot controller should forward the volume snapshot requests.
        # If not present, "maya-apiserver-service" will be used for lookup.
        # This is supported for openebs snapshot controller version 0.6-RC1 onwards
        - name: OPENEBS_MAYA_SERVICE_NAME
          value: "openebs-apiservice"
        livenessProbe:
          exec:
            command:
            - pgrep
            - ".*controller"
          initialDelaySeconds: 30
          periodSeconds: 60
      - name: openebs-snapshot-provisioner
        image: "quay.io/openebs/snapshot-provisioner:1.3.0"
        imagePullPolicy: IfNotPresent
        env:
        # OPENEBS_IO_K8S_MASTER enables openebs snapshot provisioner to connect to K8s
        # based on this address. This is ignored if empty.
        # This is supported for openebs snapshot provisioner version 0.6-RC1 onwards
        #- name: OPENEBS_IO_K8S_MASTER
        #  value: "http://10.128.0.12:8080"
        # OPENEBS_IO_KUBE_CONFIG enables openebs snapshot provisioner to connect to K8s
        # based on this config. This is ignored if empty.
        # This is supported for openebs snapshot provisioner version 0.6-RC1 onwards
        #- name: OPENEBS_IO_KUBE_CONFIG
        #  value: "/home/ubuntu/.kube/config"
        # OPENEBS_NAMESPACE is the namespace that this snapshot provisioner will
        # lookup to find maya api service
        - name: OPENEBS_NAMESPACE
          value: "openebs"
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        # OPENEBS_MAYA_SERVICE_NAME provides the maya-apiserver K8s service name,
        # that snapshot provisioner should forward the volume snapshot PV requests.
        # If not present, "maya-apiserver-service" will be used for lookup.
        # This is supported for openebs snapshot provisioner version 0.6-RC1 onwards
        - name: OPENEBS_MAYA_SERVICE_NAME
          value: "openebs-apiservice"
        livenessProbe:
          exec:
            command:
            - pgrep
            - ".*provisioner"
          initialDelaySeconds: 30
          periodSeconds: 60

---
# Source: openebs/templates/deployment-ndm-operator.yaml

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: openebs-ndm-operator
  namespace: openebs
  labels:
    app: openebs
    chart: openebs-1.3.0
    release: openebs
    heritage: Tiller
    component: ndm-operator
    openebs.io/component-name: ndm-operator
    openebs.io/version: 1.3.0
    name: ndm-operator
spec:
  replicas: 1
  strategy:
    type: "Recreate"
    rollingUpdate: null
  selector:
    matchLabels:
      app: openebs
      release: openebs
  template:
    metadata:
      labels:
        app: openebs
        release: openebs
        component: ndm-operator
        name: ndm-operator
        openebs.io/component-name: ndm-operator
        openebs.io/version: 1.3.0
    spec:
      serviceAccountName: openebs-maya-operator
      containers:
      - name: openebs-ndm-operator
        image: "quay.io/openebs/node-disk-operator-amd64:v0.4.3"
        imagePullPolicy: IfNotPresent
        readinessProbe:
          exec:
            command:
            - stat
            - /tmp/operator-sdk-ready
          initialDelaySeconds: 4
          periodSeconds: 10
          failureThreshold: 1
        env:
        - name: WATCH_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: OPERATOR_NAME
          value: "node-disk-operator"
        - name: CLEANUP_JOB_IMAGE
          value: "quay.io/openebs/linux-utils:3.9"

---
# Source: openebs/templates/validationwebhook.yaml

---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: openebs-validation-webhook-cfg
  labels:
    app: openebs
    chart: openebs-1.3.0
    release: openebs
    heritage: Tiller
    component: admission-webhook
    openebs.io/component-name: admission-webhook
webhooks:
# failurePolicy Fail means that an error calling the webhook causes the admission to fail.
  - name: admission-webhook.openebs.io
    failurePolicy: Ignore
    clientConfig:
      service:
        name: admission-server-svc
        namespace: openebs
        path: "/validate"
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURDVENDQWZHZ0F3SUJBZ0lSQUt2azJaYzlpdWladnY2czJ0Nzk2QkV3RFFZSktvWklodmNOQVFFTEJRQXcKSGpFY01Cb0dBMVVFQXhNVFlXUnRhWE56YVc5dUxYTmxjblpsY2kxallUQWVGdzB4T1RFd01UVXdPREF4TURGYQpGdzB5T1RFd01USXdPREF4TURGYU1CNHhIREFhQmdOVkJBTVRFMkZrYldsemMybHZiaTF6WlhKMlpYSXRZMkV3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUROQ2g0U2lreC94OTZaYXNCam1Qb2oKQjQ3NFE1cjQ4U29mWmQ4UmNPT3llRjI0OFdja2ZMOGcrMXZvK3NFMTlDWGJMUHJ5YzBkMnUyM0xISzJwVk9JbApVL2JIS2c4b1dxSUZ5eGNxMWk3aEZrNkZvK3RSTklBZDlxOVJ4RGpNcGl0c0piL2ZHSlhUdWYrYU1nNVRWckYyCjlwK1UrNjhTQUZtb01tc2FiOStGL0tYTXFhUmFPMUhYYndyaUh4N0dGNFl5Q1Q2azNBRGlwWGJYa2NaTUYzN3QKU0FMbVpmZmpnTnlKWGUzQnllcmJHdGc0OVhqLzZzdUdFellFZjhlLzR0S3dLQTJDSG9RVTBkN0VtK05Iek5vQQpKNFNjUVpjMHNwZENLQUdJMFRKSS9qUGZ2MVhQL05DNXpma2Eza0VJdVZRMzRVRGtyaHdRd09aTkJNL0F2dVZ4CkFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUVBd0lDcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBVkFBawo4U0hKckgweHBmdGpHazM4Yi9nTXM4RmxIMisrSjdxM1ROVUZCbHZENEQvQXdkcHluaFFhV1VXMkRLNlVINTgzCld6aEh6cDNVNUZSNXhZaUIvVkVkL2NEQ2ZVZXlMcUhlb0dwRUZ6eW1INjlkbXlVblJSMnRReXdqbFRiaGd4bnAKQjl0enk4eCtYOWVsaGkreEtrSE54aUpEQ0Ryd3ZjcEFhbVdrOUZ2SGZENkFpZHhwMGdRMnBXTXhrWXliQ1RETgpxUzhhbTRzWEpTOGJ3dEw4QUR3d2tITkIzZDJtZXdzRzNIb3JkeUpMWGwveGdCMk9jNDBEaEJjK0pwV0huQmZqCml4bmxCRGF4cElFTFN1TmhyaHFSL05hdndHeE9QVkxXVVI1YUxoSUgyQ3BxYVRpZVFmdW5ITTMvMmxxY1B6bWQKQzQ4bGFacTN3UnhXNFNURFFRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    rules:
      - operations: [ "CREATE", "DELETE" ]
        apiGroups: ["*"]
        apiVersions: ["*"]
        resources: ["persistentvolumeclaims"]
      - operations: [ "CREATE", "UPDATE" ]
        apiGroups: ["*"]
        apiVersions: ["*"]
        resources: ["cstorpoolclusters"]
---
apiVersion: v1
kind: Secret
metadata:
  name: admission-server-certs
  namespace: openebs
  labels:
    app: openebs
    chart: openebs-1.3.0
    release: openebs
    heritage: Tiller
    openebs.io/component-name: admission-webhook
type: Opaque
data:
  cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVekNDQWp1Z0F3SUJBZ0lRVmYwWTdkWS96VGcvYUVzUW80MWNtekFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOaFpHMXBjM05wYjI0dGMyVnlkbVZ5TFdOaE1CNFhEVEU1TVRBeE5UQTRNREV3TWxvWApEVEk1TVRBeE1qQTRNREV3TWxvd0h6RWRNQnNHQTFVRUF4TVVZV1J0YVhOemFXOXVMWE5sY25abGNpMXpkbU13CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNzNTZvVjBvTENmNUluRldweWRQbmIKWmxjaU5nOXpjTmpJODJnaWtQdXNIZkhhZVdQeGpCMWtIbFJucFRwdmZzckROQmkzcHpqaWkxU0RkRUxSYkd0egpwNHp6dVQrdElINnZDR2hWekxDeWhLbzh1eDlXVi9YTVpkUkpmYzhYNy9JTXVPZXdReGNqRi8wNURQeVVWd05XClA2Zm92Z3ZjMDhxQkp0MTBod2dPVmFKNlg5OVhab2dQNVpXQ1hpSlhnSENWTDZBZXNkZUJ1eHczVTBPZllycnUKRTZsSENwN3dQd2lRWC9BYVVMYTFlNUtqenpLbWFDMGNQM1R0elNnL0dHemNIQVA5ak9jVnF1eXFtTHVqR01FQgp0alBJQ2sxSVZCTnVYeG1NWkFoUWpER0Z0V21MMUxBNURMRzJ2WXRjb09QTXlPWFUzQTdGWEthQTF3N3NsRG5MCkFnTUJBQUdqZ1lzd2dZZ3dEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUIKQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNRWtHQTFVZEVRUkNNRUNDSEdGa2JXbHpjMmx2YmkxegpaWEoyWlhJdGMzWmpMbTl3Wlc1bFluT0NJR0ZrYldsemMybHZiaTF6WlhKMlpYSXRjM1pqTG05d1pXNWxZbk11CmMzWmpNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUN3K0dHMmMwek1RWG5OWlJHSk50by9SOXBHQm5iVGdMWnkKUkZjQ0paM2d6WVQ3RFAveFFhZUVSNkhqdnVnY0Q5bHdnL3hYZ2VBNUhLZE83QXZEY0JGdG5VdXNRMy9IazRXcApvYUJTaVBTU3VsRUFJQVJSNVNLR3VESE52ZUVucGNLbkdrWTVoN2VjbDR0M3U2MDZVZm1SK1dnd3J2SGZDZHBDCjBlUFczdDlNc1UvR0tQNUhrRXV5b0NRWjVBMVoxd1Jac2FYN1hPSmx4Sk03NmxHYW1XOFNCam1ObHVSWEJURVQKOFY0UWtON0xXNXpGNFZGSy9iVGtvci9ZdHRGT3RKTm1QSFc0S0J5ejdsajEwaVUzRmNNVHhraERqdmdGU1A1MApYTXBoREQvVXQ0TFEyQXNHang1ZGVON2NiRUl6RUJxa3VHblZFaGpIdU1QTS9zaXJGZTBvCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBck9lcUZkS0N3bitTSnhWcWNuVDUyMlpYSWpZUGMzRFl5UE5vSXBEN3JCM3gybmxqCjhZd2RaQjVVWjZVNmIzN0t3elFZdDZjNDRvdFVnM1JDMFd4cmM2ZU04N2svclNCK3J3aG9WY3l3c29TcVBMc2YKVmxmMXpHWFVTWDNQRisveURMam5zRU1YSXhmOU9RejhsRmNEVmorbjZMNEwzTlBLZ1NiZGRJY0lEbFdpZWwvZgpWMmFJRCtXVmdsNGlWNEJ3bFMrZ0hySFhnYnNjTjFORG4ySzY3aE9wUndxZThEOElrRi93R2xDMnRYdVNvODh5CnBtZ3RIRDkwN2Mwb1B4aHMzQndEL1l6bkZhcnNxcGk3b3hqQkFiWXp5QXBOU0ZRVGJsOFpqR1FJVUl3eGhiVnAKaTlTd09ReXh0cjJMWEtEanpNamwxTndPeFZ5bWdOY083SlE1eXdJREFRQUJBb0lCQVFDamRRN3lPbVNyZ3ZhawpSRGF4cGF4Zm9jeFY1MDJNRU82Z2FwdlRzY1I2M29RNXlmQ1Y5YVFEZGpqTkV3Sy9UTnBhMS9GV0RaeFZidXFpCnExSlBzWE9UanA1TitwOGNDRkE3SUhPaVNUUHlVRUN2MFNhNjljVEZTcTc2R3htZ3c1SE1QVEdyRElIZkIxcTQKaUhKdnVpTEpjcnhGNXdSSDYyRFIzL0FUcldRTVI1SHpZMzBwZVZSRy9WZUE5OGIrL0hjbmpzV3hWbmsrK1I4eApxNnh6RW9hWUw2TVFFcGhXTlQwTkJHbXdxcUdKeDBVMnJ3T0FWbEF6cjJueS9SMWlxQVJIRkFaZzBpVTBObkFXClhpQ0tuQXJBdDlXR2QxMXF5c1VuNi94WTdFWENQTUJIbGt2MnVTQ2hEQmIwNmdySVlJQ29mR2ZGVmNCdFh4TGUKU2QrK2ROM0JBb0dCQU9FV0wyWkxNUFJpbmdhcG5YRDZ6T3p3U3Q3RVBraHhLMzdNZzhBc2QzdkhMWlZFR0g2cgpCZmxSV0tsMzQxV1NHclJvZU1FODVhRCtFTEFHd1FxZENadXVkSitDU2MrRzVmWXdmcFovQmZIbWptSXNaM1pZCitnMTZUSDBuNVdtMTU4Sk94NDM2TUZ1b2RSc3U2eEpicDBmTjA1dlk3SVNIU016TjNOWWg5V1lqQW9HQkFNU20KMHQrUTVyTGRGb0p3OWZJYldqQlg5d2Vwa2MrSXJQbllrNmhITlB5eTRXZGxVQkdYSU9IaWFySkNhbVV6emNIKwpmMmdUbTIraDFDUGcwZmdkb1lHWnRqWkVIM3VPMm45VEJXZzVkVWEvZzdBWXN0OUJqM2w5RVVFbnI2Rk41S0ovCnhmWVhoNU1VcWMwN3puRHRuN1hHZW1NRVFtdUJHWjRjVG5COUwxUTVBb0dBZEczeFhzeU9LaHZJK2xGS2EyS1EKRmcvRjZxMUFPbUN2eXdzbks0VFUyV1lTSWgvek83SmppSytYV1RIMm1oRFZWM1NpNGZJS0pkakY4UWZOV3h3WQpHRHVKZitqNUhTditUL2FOeEhNNE5BUzZxZldtSHdXdmNzRk1SNEVYbmpMR0N6Q004TmYxbzdQanY0ZnBlTG1JCk1oQTU0V2U0RUdXYU5yWldBVDNYbmxrQ2dZRUF3dFlXYi9MODM1STFUeC9rVGUvVHQ3b3Z3cU83RjhmdXVjeGUKMzRkTmRHRTIrbDVpcWtyMkJWZHpKeEt1bjM1b0NpREEwcms2YzZ2K3AxMkVLelFRWkh1TEVORUY4RUZsTW1scgpIZ3h2cVp6dU9IY0FJanF1a0V2ZDRKUVZhdGZtQXlwZFZLbVRaYUkvYWx3cStiQTFZTUE1V2dsS1ZZRWZoSXUvCkc2eXNTK0VDZ1lFQXBDRHhuRmtyZ2RKaHdIaWNWZTk3ZThUNGJLN2ZmY21IYUZLOEVxVlFSQVpoNndCVHZIY0kKcjQzTXR0MmdYZEF4UzJHQWlFVVVJYUR3aDIwakRjekF2cS9HYVZFM1hjbkpvdDByM3BpY05PRFdoMFNNMmJ0eApXL1l2QzdUVStGR0NXZzcyd1psVk15MktxSDRZK0V1Q0UyYzBCTEJKWkxYZ1BDalBpTjhqNWRRPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=

